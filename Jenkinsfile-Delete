pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'  // Specify the AWS region
        STACK_NAME = 'DEMO'  // Specify the CloudFormation stack name
        TEMPLATE_FILE = 'devops/demo.yml'  // Specify the CloudFormation template file
      //  PARAMETER_FILE = 'parameters.json'  // Specify the CloudFormation parameter file
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/naveen4644/cloudformation.git'
            }
        }

        stage('Get EC2 Instance ID') {
            steps {
                script {

                    def instanceId
                    
                    // Get the stack description from CloudFormation
                    def stackDescription = sh(
                        returnStdout: true,
                        script: "aws cloudformation describe-stacks --stack-name ${STACK_NAME} --region ${AWS_REGION}"
                    ).trim()
                    
                    // Extract the instance ID from the stack description
                    instanceId = stackDescription =~ /InstanceId: (i-[a-zA-Z0-9]+)/
                    if (instanceId) {
                        instanceId = instanceId[0][1]
                        // Disable termination protection for the instance
                        sh "aws ec2 modify-instance-attribute --instance-id $instanceId --no-disable-api-termination"
                    } else {
                        error("Instance ID not found in CloudFormation output.")
                    }
                }
            }
        }
        
        stage('Delete Stack') {
            steps {
                script {
                       input message: "Do you want to delete the CloudFormation stack?", ok: "Delete"
                        try {
                            sh "aws cloudformation delete-stack --stack-name ${STACK_NAME}"
                            sh "aws cloudformation wait stack-delete-complete --stack-name ${STACK_NAME}"
                        } catch (Exception e) {
                            echo "Stack deletion failed or does not exist: ${e.message}"
                        }
                    }
            }
        }
    }
}
